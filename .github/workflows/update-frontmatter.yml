name: Update Frontmatter

on:
  push:
    branches:
      - 'main'
    paths:
      - 'content/docs/**/*.md'
      - '!content/docs/README.md' # Exclude the README.md file
      - '!content/docs/shared-content/**/*.md' # Exclude the shared-content folder

permissions:
  contents: read

jobs:
  update-date:
    permissions:
      contents: write # for Git to git push
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'auto-update') }}

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2.7.0
        with:
          fetch-depth: 2
          token: ${{ secrets.ACCESS_TOKEN }}
          # ACCESS_TOKEN is a personal access token with repo scope
          # it needs to be updated in the repo secrets when it expires - Nov 10, 2024

      - name: Set up Node.js
        uses: actions/setup-node@7c12f8017d5436eb855f1ed4399f037a36fbd9e8 # v2.5.2
        with:
          node-version: 18

      - name: Get list of modified files
        id: get-modified-files
        run: |
          modified_files=$(git diff --name-only HEAD^ HEAD | grep '^content/docs/.*\.md$' | xargs)
          echo "Modified files: $modified_files"
          if [ -z "$modified_files" ]; then
            echo "No modified Markdown files to update."
            exit 0
          fi
          echo "modified_files=$modified_files" >> $GITHUB_OUTPUT

      - name: Install packages
        run: npm ci

      - name: Run update script
        run: node src/scripts/update-frontmatter.js ${{ steps.get-modified-files.outputs.modified_files }}

      - name: Commit changes
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          export HUSKY=0
          git add -A
          # Check for meaningful changes before committing
          if [ -n "$(git status --porcelain)" ]; then
            # Commit only modified markdown files, not all changes
            git commit -m "chore: update frontmatter date (auto-update)" ${{ steps.get-modified-files.outputs.modified_files }}
            echo "Changes committed"
          else
            echo "No significant changes to commit"
            exit 0
          fi

      - name: Pull latest changes
        run: git pull --rebase

      - name: Push changes
        run: git push origin HEAD:main
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
