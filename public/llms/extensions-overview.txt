# Postgres Extensions in Neon

This guide provides an overview of the PostgreSQL extensions supported by Neon, categorized by their primary use cases.

## Extension Categories

Neon supports a wide range of PostgreSQL extensions across various categories:

1. **AI / Machine Learning**
   - pgvector: Store vector embeddings and perform vector similarity search
   - pg_tiktoken: Tokenize data using the OpenAI tiktoken library
   - pgrag: Create end-to-end Retrieval-Augmented Generation (RAG) pipelines

2. **Analytics**
   - pg_mooncake: Adds columnstore tables and DuckDB execution for fast analytics
   - hll: Implements HyperLogLog data structure for efficient distinct value counting
   - timescaledb: Enables Postgres as a time-series database

3. **Geospatial**
   - postgis: Extends Postgres to allow GIS objects to be stored in the database
   - h3: Integrates Uber's H3 geospatial indexing system
   - earthdistance: Calculates great circle distances on the Earth's surface

4. **Data Transformations**
   - citext: Provides case-insensitive character string type
   - hstore: Implements key-value pair storage within a single Postgres value
   - ltree: Provides data types for representing hierarchical tree-like structures

5. **Index / Table Optimization**
   - pg_repack: Removes bloat from tables and indexes
   - pg_prewarm: Preloads relation data into the Postgres buffer cache
   - bloom: Provides an index access method based on Bloom filters

6. **Search**
   - pg_trgm: Determines similarity of text based on trigram matching
   - fuzzystrmatch: Determines similarities and distance between strings
   - unaccent: Removes accents from characters for text search

## Installing Extensions

To install an extension in your Neon database:

1. Connect to your database using psql or another Postgres client
2. Run the CREATE EXTENSION command:
   ```sql
   CREATE EXTENSION extension_name;
   ```
3. Verify the installation:
   ```sql
   SELECT * FROM pg_extension;
   ```

## Updating Extensions

To update an extension to a newer version:

1. Connect to your database
2. Run the ALTER EXTENSION command:
   ```sql
   ALTER EXTENSION extension_name UPDATE;
   ```

## Requesting Extension Support

If you need an extension that Neon doesn't currently support:

1. Check the current list of supported extensions
2. Submit a request through the Neon Console or contact support
3. Provide details about your use case and requirements

For detailed information on specific extensions, refer to the Neon documentation.
