# Monitoring in Neon

> The "Monitoring in Neon" documentation outlines the tools and procedures for tracking database performance and health, enabling users to efficiently manage and troubleshoot their Neon database environments.

## Source

- [Monitoring in Neon HTML](https://neon.com/docs/introduction/monitoring): The original HTML version of this documentation

To find out what's going on with your Neon projects and databases, Neon offers several ways to track metrics and monitor usage.

- [Monitoring dashboard](https://neon.com/docs/introduction/monitoring-page): View system and database metrics on the Neon Monitoring dashboard
- [Monitor billing and usage](https://neon.com/docs/introduction/monitor-usage): Monitor billing and usage metrics for your Neon account and projects
- [Autoscaling](https://neon.com/docs/guides/autoscaling-guide#monitor-autoscaling): Monitor Autoscaling vCPU and RAM usage
- [Neon system operations](https://neon.com/docs/manage/operations): Monitor Neon project operations from the Neon Console, API, or CLI
- [Active Queries](https://neon.com/docs/introduction/monitor-active-queries): View and analyze running queries in your database
- [Query performance](https://neon.com/docs/introduction/monitor-query-performance): View and analyze query performance for your Neon database
- [pg_stat_statements](https://neon.com/docs/extensions/pg_stat_statements): Monitor query performance and statistics in Postgres with pg_stat_statements

## Datadog integration

- [Datadog](https://neon.com/docs/guides/datadog): Export Neon Metrics to Datadog with the Neon Datadog Integration

## OpenTelemetry

- [OTel integration](https://neon.com/docs/guides/opentelemetry): Export Neon metrics to any OpenTelemetry-compatible observability platform
- [Grafana Cloud](https://neon.com/docs/guides/grafana-cloud): Export Neon metrics and logs to Grafana Cloud with native OTLP integration
- [Better Stack](https://neon.com/guides/betterstack-otel-neon): Monitor Neon with Better Stack using OpenTelemetry integration
- [New Relic](https://neon.com/guides/newrelic-otel-neon): Monitor Neon with New Relic using OpenTelemetry integration
- [Metrics and logs reference](https://neon.com/docs/reference/metrics-logs): Metrics and logs reference for monitoring

## Other monitoring tools

- [pgAdmin](https://neon.com/docs/introduction/monitor-pgadmin): Monitor your Neon Postgres database with pgAdmin
- [PgHero](https://neon.com/docs/introduction/monitor-pghero): Monitor your Neon Postgres database with PgHero

## Feedback and future improvements

At Neon, we understand that observability and monitoring are critical for running successful applications.

If you've got feature requests or feedback about what you'd like to see in Neon monitoring and observability features, let us know via the [Feedback](https://console.neon.tech/app/projects?modal=feedback) form in the Neon Console or our [feedback channel](https://discord.com/channels/1176467419317940276/1176788564890112042) on Discord.
