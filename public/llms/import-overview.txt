# Migrating Data to Neon Postgres

This guide provides an overview of methods for migrating data to Neon Postgres from different database providers and sources.

## Migration Methods

Neon supports multiple migration approaches:

1. **Import Data Assistant**
   - Guided migration tool for existing databases
   - Step-by-step wizard interface
   - Progress tracking and validation

2. **pg_dump and pg_restore**
   - Standard Postgres migration tools
   - Full database or schema-only migrations
   - Custom format dumps for flexibility

3. **CSV Import**
   - Import tabular data from CSV files
   - Use psql's \copy command
   - Transform data during import

4. **Logical Replication**
   - Near-zero downtime migrations
   - Real-time data synchronization
   - Support for various Postgres providers

## Migrating from Specific Providers

Step-by-step guides for common migration sources:

1. **Other Postgres Providers**
   - Heroku Postgres
   - AWS RDS
   - Azure Database for PostgreSQL
   - Digital Ocean
   - Supabase
   - Render

2. **Non-Postgres Sources**
   - Firebase Firestore
   - MySQL
   - MongoDB
   - SQLite

## Migration Best Practices

Ensure a smooth migration process:

1. **Pre-Migration Planning**
   - Assess database size and complexity
   - Identify dependencies and constraints
   - Plan for downtime or synchronization

2. **During Migration**
   - Monitor progress and errors
   - Validate data integrity
   - Handle schema differences

3. **Post-Migration Verification**
   - Compare record counts
   - Validate data samples
   - Test application functionality

## Sample Data

Explore Neon with pre-built datasets:

1. **Available Sample Datasets**
   - Pagila (movie rental data)
   - Northwind (business data)
   - COVID-19 (time series data)
   - TPC-H (benchmark data)

2. **Import Sample Data**
   - One-click import from the Neon Console
   - CLI-based import
   - Custom sample data loading

For detailed instructions on specific migration methods, refer to the Neon documentation.
