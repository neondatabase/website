# Neon data migration guides

> This guide provides an overview of all available data migration options for Neon Postgres, including tools for migrating from various database providers, using logical replication for near-zero downtime migrations, and importing sample datasets for testing.

Find instructions for migrating data from Postgres, CSV, other Neon projects, and other database providers. For near-zero downtime data migrations from other Postgres providers, consider using logical replication. Additionally, if you're new to Neon and want to try it out, our sample data guide provides datasets for exploration and testing.

## Source

- [Neon data migration guides HTML](https://neon.com/docs/import/migrate-intro): The original HTML version of this documentation

**Note**: If you're planning to migrate a production workload to Neon, let us know&#8212;we'll connect you with an expert from our team. You can reach out to us [here](https://neon.com/migration-assistance).


## Data migration guides

Here are the available guides for migrating data to Neon Postgres:

- [Import Data Assistant](/docs/import/import-data-assistant): Move your existing database to Neon using our guided migration tool
- [Migrate with pg_dump and pg_restore](/docs/import/migrate-from-postgres): Migrate data from another Postgres database
- [Migrate from another Neon project](/docs/import/migrate-from-neon): Migrate data between Neon projects for Postgres version, region, or account migration
- [Migrate schema only](/docs/import/migrate-schema-only): Migrate only the schema from a Postgres database
- [Import data from CSV](/docs/import/import-from-csv): Import data from CSV files using the psql command-line utility
- [Migrate from Firebase Firestore](/docs/import/migrate-from-firebase): Migrate data from Firebase Firestore using a custom Python script
- [Migrate from Heroku](/docs/import/migrate-from-heroku): Migrate data from Heroku Postgres using the Heroku CLI
- [Migrate with AWS DMS](/docs/import/migrate-aws-dms): Migrate data using the AWS Database Migration Service
- [Migrate from Azure](/docs/import/migrate-from-azure-postgres): Migrate from Azure Database for PostgreSQL
- [Migrate from Digital Ocean](/docs/import/migrate-from-digital-ocean): Migrate data from Digital Ocean Postgres
- [Import sample data](/docs/import/import-sample-data): Import sample datasets for exploration and testing
- [Migrate from MySQL](/docs/import/migrate-mysql): Migrate your MySQL data to Neon Postgres using pgloader
- [Migrate from Render](/docs/import/migrate-from-render): Migrate data from Render to Neon Postgres
- [Migrate from Supabase](/docs/import/migrate-from-supabase): Migrate data from Supabase to Neon Postgres
- [Migrate with pgcopydb](/docs/import/pgcopydb): Migrate data using pgcopydb for parallel processing



## Use logical replication for near-zero downtime data migrations

Postgres logical replication in Neon provides an efficient way to migrate data from other Postgres providers with minimal downtime. By replicating data in real-time, this method allows you to transition your applications to Neon without interrupting your services. Please refer to our logical replication guides for instructions.
