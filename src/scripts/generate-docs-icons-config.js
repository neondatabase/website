/* eslint-disable no-console */
const fs = require('fs');
const path = require('path');

function generateDocsIconsConfig() {
  const iconsDir = path.join(process.cwd(), 'public/images/technology-logos');

  if (!fs.existsSync(iconsDir)) {
    console.error(`Folder ${iconsDir} not found`);
    process.exit(1);
  }

  const files = fs.readdirSync(iconsDir);

  const lightIcons = files
    .filter((file) => file.endsWith('.svg') && !file.includes('-dark'))
    .map((file) => file.replace('.svg', ''));

  const darkIcons = files
    .filter((file) => file.endsWith('-dark.svg'))
    .map((file) => file.replace('-dark.svg', ''));

  const iconsConfig = {};

  lightIcons.forEach((iconName) => {
    iconsConfig[iconName] = {
      name: iconName,
      lightIconPath: `/images/technology-logos/${iconName}.svg`,
      darkIconPath: darkIcons.includes(iconName)
        ? `/images/technology-logos/${iconName}-dark.svg`
        : null,
    };
  });

  darkIcons.forEach((iconName) => {
    if (!iconsConfig[iconName]) {
      iconsConfig[iconName] = {
        name: iconName,
        lightIconPath: null,
        darkIconPath: `/images/technology-logos/${iconName}-dark.svg`,
      };
    }
  });

  let configContent = `// This file is automatically generated by the scripts/generate-icons-config.js script.
// Do not edit it manually!
const ICONS_CONFIG = ${JSON.stringify(iconsConfig, null, 2)};

export default ICONS_CONFIG;
`;

  configContent = configContent
    .replace(/"/g, "'")
    .replace(/'([a-zA-Z_$][a-zA-Z0-9_$]*)'\s*:/g, '$1:')
    .replace(/\n(\s*)(})/g, ',\n$1$2');

  const configDir = path.join(process.cwd(), 'src/config');
  if (!fs.existsSync(configDir)) {
    fs.mkdirSync(configDir, { recursive: true });
  }

  const configPath = path.join(configDir, 'docs-icons-config.js');
  fs.writeFileSync(configPath, configContent);
}

try {
  generateDocsIconsConfig();
} catch (error) {
  console.error('‚ùå Error generating configuration:', error);
  process.exit(1);
}
